import datetime
import sqlite3

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QCompleter, QMessageBox

import login
import sellDataHelper
import tableController

db = sqlite3.connect("/home/abdelrhman/PycharmProjects/pythonProject/identifier.sqlite")


class MainWindow(QtWidgets.QMainWindow):
    TD = sellDataHelper.datahelper()

    def closeEvent(self, event):
        reply = QMessageBox.question(self, 'اغلاق', 'هل تريد الخروج', QMessageBox.Yes | QMessageBox.No, QMessageBox.No)
        if reply == QMessageBox.Yes:
            event.accept()
            db.commit()
        else:
            event.ignore()

    def __init__(self, userType, maxV=30):
        super().__init__()
        self.userType = userType

        self.setObjectName("MainWindow")
        self.resize(875, 566)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sizePolicy().hasHeightForWidth())
        self.setSizePolicy(sizePolicy)
        self.setMinimumSize(QtCore.QSize(510, 550))
        self.centralwidget = QtWidgets.QWidget(self)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setMinimumSize(QtCore.QSize(500, 500))
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.signOut = QtWidgets.QPushButton()
        self.signOut.setText('تسجيل الخروج')
        self.signOut.clicked.connect(lambda: self.loginPage())
        self.signOut.setFocusPolicy(Qt.StrongFocus)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.signOut.sizePolicy().hasHeightForWidth())
        self.signOut.setSizePolicy(sizePolicy)
        self.signOut.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setMinimumSize(QtCore.QSize(500, 500))
        self.tabWidget.setBaseSize(QtCore.QSize(0, 0))
        self.tabWidget.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.tabWidget.setObjectName("tabWidget")
        self.sell_payment = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sell_payment.sizePolicy().hasHeightForWidth())
        self.sell_payment.setSizePolicy(sizePolicy)
        self.sell_payment.setObjectName("sell_payment")
        self.gridLayout = QtWidgets.QGridLayout(self.sell_payment)
        self.gridLayout.setObjectName("gridLayout")
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.gridLayout_2.setContentsMargins(5, 0, 5, 0)
        self.gridLayout_2.setHorizontalSpacing(0)
        self.gridLayout_2.setVerticalSpacing(10)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.gridLayout_5 = QtWidgets.QGridLayout()
        self.gridLayout_5.setContentsMargins(5, 0, 5, 0)
        self.gridLayout_5.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.itemName_2 = QtWidgets.QLineEdit(self.sell_payment)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(4)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.itemName_2.sizePolicy().hasHeightForWidth())
        self.itemName_2.setSizePolicy(sizePolicy)
        self.itemName_2.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.itemName_2.setObjectName("itemName_2")
        self.gridLayout_5.addWidget(self.itemName_2, 0, 0, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.sell_payment)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_6.sizePolicy().hasHeightForWidth())
        self.label_6.setSizePolicy(sizePolicy)
        self.label_6.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.label_6.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.label_6.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.label_6.setLineWidth(13)
        self.label_6.setMidLineWidth(0)
        self.label_6.setTextFormat(QtCore.Qt.AutoText)
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setIndent(0)
        self.label_6.setObjectName("label_6")
        self.gridLayout_5.addWidget(self.label_6, 0, 1, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout_5, 0, 0, 1, 1)
        self.gridLayout_19 = QtWidgets.QGridLayout()
        self.gridLayout_19.setObjectName("gridLayout_19")
        self.addsell = QtWidgets.QPushButton(self.sell_payment)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.addsell.sizePolicy().hasHeightForWidth())
        self.addsell.setSizePolicy(sizePolicy)
        self.addsell.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.addsell.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.addsell.setObjectName("addsell")
        self.gridLayout_19.addWidget(self.addsell, 0, 0, 1, 1)
        self.number_2 = QtWidgets.QDoubleSpinBox(self.sell_payment)
        self.number_2.setDecimals(3)
        self.number_2.clear()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(4)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.number_2.sizePolicy().hasHeightForWidth())
        self.number_2.setSizePolicy(sizePolicy)
        self.number_2.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.number_2.setMaximum(1600.99)
        self.number_2.setSingleStep(0.25)
        self.number_2.setObjectName("number_2")
        self.gridLayout_19.addWidget(self.number_2, 0, 1, 1, 1)
        self.label_7 = QtWidgets.QLabel(self.sell_payment)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_7.sizePolicy().hasHeightForWidth())
        self.label_7.setSizePolicy(sizePolicy)
        self.label_7.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.label_7.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.label_7.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.label_7.setLineWidth(13)
        self.label_7.setMidLineWidth(0)
        self.label_7.setTextFormat(QtCore.Qt.AutoText)
        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
        self.label_7.setIndent(0)
        self.label_7.setObjectName("label_7")
        self.gridLayout_19.addWidget(self.label_7, 0, 2, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout_19, 3, 0, 1, 1)
        self.gridLayout_38 = QtWidgets.QGridLayout()
        self.gridLayout_38.setContentsMargins(5, 0, 5, 0)
        self.gridLayout_38.setVerticalSpacing(0)
        self.gridLayout_38.setHorizontalSpacing(0)
        self.gridLayout_2.addLayout(self.gridLayout_38, 2, 0, 1, 1)
        self.sellType = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sellType.sizePolicy().hasHeightForWidth())
        self.sellType.setSizePolicy(sizePolicy)
        self.sellType.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.sellType.setContentsMargins(5, 0, 5, 0)
        self.gridLayout_38.addWidget(self.sellType, 0, 0, 1, 1)
        self.sellFrom = QtWidgets.QWidget()
        self.sellFrom.setContentsMargins(5, 0, 5, 0)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sellFrom.sizePolicy().hasHeightForWidth())
        self.sellFrom.setSizePolicy(sizePolicy)
        self.sellFrom.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.gridLayout_38.addWidget(self.sellFrom, 1, 0, 1, 1)
        self.gridLayout_39 = QtWidgets.QGridLayout(self.sellType)
        self.gridLayout_39.setContentsMargins(5, 0, 5, 5)
        self.gridLayout_39.setHorizontalSpacing(0)
        self.gridLayout_39.setVerticalSpacing(0)
        self.gridLayout_40 = QtWidgets.QGridLayout(self.sellFrom)
        self.gridLayout_40.setContentsMargins(5, 5, 5, 0)
        self.gridLayout_40.setVerticalSpacing(0)
        self.gridLayout_40.setHorizontalSpacing(0)
        self.gomla = QtWidgets.QRadioButton()
        self.gomla.setText("بيع نص جمله")
        self.gomla.setCursor(QtGui.QCursor(QtCore.Qt.OpenHandCursor))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.gomla.sizePolicy().hasHeightForWidth())
        self.gomla.setSizePolicy(sizePolicy)
        self.gomla.setMaximumSize(QtCore.QSize(16777215, 20))
        self.gomla.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.gomla.setObjectName("shopFees")
        self.gridLayout_39.addWidget(self.gomla, 0, 0, 1, 1)
        self.qtaay = QtWidgets.QRadioButton()
        self.qtaay.setText("بيع قطاعي")
        self.qtaay.click()
        self.qtaay.setCursor(QtGui.QCursor(QtCore.Qt.OpenHandCursor))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.qtaay.sizePolicy().hasHeightForWidth())
        self.qtaay.setSizePolicy(sizePolicy)
        self.qtaay.setMaximumSize(QtCore.QSize(16777215, 20))
        self.qtaay.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.qtaay.setObjectName("personalFees")
        self.gridLayout_39.addWidget(self.qtaay, 0, 1, 1, 1)

        # ...........................
        self.fromShop = QtWidgets.QRadioButton()
        self.fromShop.setText("من المحل")
        self.fromShop.setCursor(QtGui.QCursor(QtCore.Qt.OpenHandCursor))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fromShop.sizePolicy().hasHeightForWidth())
        self.fromShop.setSizePolicy(sizePolicy)
        self.fromShop.setMaximumSize(QtCore.QSize(16777215, 20))
        self.fromShop.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.fromShop.setObjectName("fromShop")
        self.fromShop.click()
        self.gridLayout_40.addWidget(self.fromShop, 0, 1, 1, 1)
        self.fromStore = QtWidgets.QRadioButton()
        self.fromStore.setText("من المخزن")
        self.fromStore.setCursor(QtGui.QCursor(QtCore.Qt.OpenHandCursor))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fromStore.sizePolicy().hasHeightForWidth())
        self.fromStore.setSizePolicy(sizePolicy)
        self.fromStore.setMaximumSize(QtCore.QSize(16777215, 20))
        self.fromStore.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.fromStore.setObjectName("fromStore")
        self.gridLayout_40.addWidget(self.fromStore, 0, 0, 1, 1)
        self.sellTable = tableController.sellTab(
            ["الكود", "الاسم", "النوع", "العدد", "السعر", "الكلي", "المكان", "Icons/plus.png", "Icons/minus.png",
             "Icons/delete.png", 3])
        self.gridLayout_2.addWidget(self.sellTable, 4, 0, 1, 1)
        self.gridLayout_20 = QtWidgets.QGridLayout()
        self.gridLayout_20.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_20.setObjectName("gridLayout_20")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_20.addItem(spacerItem, 0, 0, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_20.addItem(spacerItem1, 0, 6, 1, 1)
        self.donesell = QtWidgets.QPushButton(self.sell_payment)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.donesell.sizePolicy().hasHeightForWidth())
        self.donesell.setSizePolicy(sizePolicy)
        self.donesell.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.donesell.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.donesell.setWhatsThis("")
        self.donesell.setObjectName("donesell")
        self.gridLayout_20.addWidget(self.donesell, 0, 5, 1, 1)
        self.cancelsell = QtWidgets.QPushButton(self.sell_payment)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cancelsell.sizePolicy().hasHeightForWidth())
        self.cancelsell.setSizePolicy(sizePolicy)
        self.cancelsell.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.cancelsell.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.cancelsell.setObjectName("cancelsell")
        self.gridLayout_20.addWidget(self.cancelsell, 0, 1, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_20.addItem(spacerItem2, 0, 4, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_20.addItem(spacerItem3, 0, 2, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout_20, 5, 0, 1, 1)
        self.gridLayout.addLayout(self.gridLayout_2, 0, 0, 1, 1)
        self.tabWidget.addTab(self.sell_payment, "")
        self.add_item = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.add_item.sizePolicy().hasHeightForWidth())
        self.add_item.setSizePolicy(sizePolicy)
        self.add_item.setObjectName("add_item")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.add_item)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.gridLayout_6 = QtWidgets.QGridLayout()
        self.gridLayout_6.setContentsMargins(5, 5, 5, 5)
        self.gridLayout_6.setHorizontalSpacing(6)
        self.gridLayout_6.setVerticalSpacing(20)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.gridLayout_10 = QtWidgets.QGridLayout()
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.number = QtWidgets.QDoubleSpinBox(self.add_item)
        self.number.clear()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(4)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.number.sizePolicy().hasHeightForWidth())
        self.number.setSizePolicy(sizePolicy)
        self.number.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.number.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.number.setMaximum(5000.99)
        self.number.setObjectName("number")
        self.gridLayout_10.addWidget(self.number, 0, 0, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.add_item)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_3.sizePolicy().hasHeightForWidth())
        self.label_3.setSizePolicy(sizePolicy)
        self.label_3.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.label_3.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.label_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.label_3.setLineWidth(13)
        self.label_3.setMidLineWidth(0)
        self.label_3.setTextFormat(QtCore.Qt.AutoText)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setIndent(0)
        self.label_3.setObjectName("label_3")
        self.gridLayout_10.addWidget(self.label_3, 0, 1, 1, 1)
        self.gridLayout_6.addLayout(self.gridLayout_10, 2, 0, 1, 1)
        self.gridLayout_8 = QtWidgets.QGridLayout()
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.itemName = QtWidgets.QLineEdit(self.add_item)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(4)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.itemName.sizePolicy().hasHeightForWidth())
        self.itemName.setSizePolicy(sizePolicy)
        self.itemName.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.itemName.setObjectName("itemName")
        self.gridLayout_8.addWidget(self.itemName, 0, 0, 1, 1)
        self.label = QtWidgets.QLabel(self.add_item)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.label.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.label.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.label.setLineWidth(13)
        self.label.setMidLineWidth(0)
        self.label.setTextFormat(QtCore.Qt.AutoText)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setIndent(0)
        self.label.setObjectName("label")
        self.gridLayout_8.addWidget(self.label, 0, 1, 1, 1)
        self.gridLayout_6.addLayout(self.gridLayout_8, 0, 0, 1, 1)
        self.gridLayout_7 = QtWidgets.QGridLayout()
        self.gridLayout_7.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_7.setSpacing(0)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.canceladding = QtWidgets.QPushButton(self.add_item)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.canceladding.sizePolicy().hasHeightForWidth())
        self.canceladding.setSizePolicy(sizePolicy)
        self.canceladding.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.canceladding.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.canceladding.setObjectName("canceladding")
        self.gridLayout_7.addWidget(self.canceladding, 0, 1, 1, 1)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_7.addItem(spacerItem4, 0, 0, 1, 1)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_7.addItem(spacerItem5, 0, 2, 1, 1)
        self.saveadding = QtWidgets.QPushButton(self.add_item)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.saveadding.sizePolicy().hasHeightForWidth())
        self.saveadding.setSizePolicy(sizePolicy)
        self.saveadding.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.saveadding.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.saveadding.setObjectName("saveadding")
        self.gridLayout_7.addWidget(self.saveadding, 0, 3, 1, 1)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_7.addItem(spacerItem6, 0, 4, 1, 1)
        self.gridLayout_32 = QtWidgets.QGridLayout()
        self.gridLayout_32.setContentsMargins(10, -1, 10, -1)
        self.gridLayout_32.setSpacing(7)
        self.gridLayout_32.setObjectName("gridLayout_32")
        self.inStore = QtWidgets.QRadioButton()
        self.inStore.setText("المخزن")
        self.inStore.setCursor(QtGui.QCursor(QtCore.Qt.OpenHandCursor))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.inStore.sizePolicy().hasHeightForWidth())
        self.inStore.setSizePolicy(sizePolicy)
        self.inStore.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.inStore.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.inStore.setObjectName("inStore")
        self.gridLayout_32.addWidget(self.inStore, 0, 0, 1, 1)
        self.inShop = QtWidgets.QRadioButton()
        self.inShop.setText("المحل")
        self.inShop.click()
        self.inShop.setCursor(QtGui.QCursor(QtCore.Qt.OpenHandCursor))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.inShop.sizePolicy().hasHeightForWidth())
        self.inShop.setSizePolicy(sizePolicy)
        self.inShop.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.inShop.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.inShop.setObjectName("personalFees")
        self.gridLayout_32.addWidget(self.inShop, 0, 1, 1, 1)
        self.gridLayout_6.addLayout(self.gridLayout_32, 8, 0, 1, 1)
        self.gridLayout_6.addLayout(self.gridLayout_7, 9, 0, 1, 1)
        self.gridLayout_11 = QtWidgets.QGridLayout()
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.gridLayout_13 = QtWidgets.QGridLayout()
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.sell = QtWidgets.QDoubleSpinBox(self.add_item)
        self.sell.clear()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(4)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sell.sizePolicy().hasHeightForWidth())
        self.sell.setSizePolicy(sizePolicy)
        self.sell.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.sell.setDecimals(2)
        self.sell.setMaximum(5000.99)
        self.sell.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.sell.setObjectName("sellTab")
        self.sell.clear()
        self.gridLayout_13.addWidget(self.sell, 0, 0, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.add_item)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_5.sizePolicy().hasHeightForWidth())
        self.label_5.setSizePolicy(sizePolicy)
        self.label_5.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.label_5.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.label_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.label_5.setLineWidth(13)
        self.label_5.setMidLineWidth(0)
        self.label_5.setTextFormat(QtCore.Qt.AutoText)
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setIndent(0)
        self.label_5.setObjectName("label_5")
        self.gridLayout_13.addWidget(self.label_5, 0, 1, 1, 1)
        self.gridLayout_11.addLayout(self.gridLayout_13, 0, 1, 1, 1)
        self.gridLayout_6.addLayout(self.gridLayout_11, 3, 0, 1, 1)
        self.gridLayout_9 = QtWidgets.QGridLayout()
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.itemType = QtWidgets.QComboBox(self.add_item)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(4)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.itemType.sizePolicy().hasHeightForWidth())
        self.itemType.setSizePolicy(sizePolicy)
        self.itemType.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.itemType.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.itemType.setObjectName("itemType")
        self.gridLayout_9.addWidget(self.itemType, 0, 0, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.add_item)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        self.label_2.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.label_2.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.label_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.label_2.setLineWidth(13)
        self.label_2.setMidLineWidth(0)
        self.label_2.setTextFormat(QtCore.Qt.AutoText)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setIndent(0)
        self.label_2.setObjectName("label_2")
        self.gridLayout_9.addWidget(self.label_2, 0, 1, 1, 1)
        self.gridLayout_6.addLayout(self.gridLayout_9, 1, 0, 1, 1)
        self.gridLayout_12 = QtWidgets.QGridLayout()
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.buy = QtWidgets.QDoubleSpinBox(self.add_item)
        self.buy.clear()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(4)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.buy.sizePolicy().hasHeightForWidth())
        self.buy.setSizePolicy(sizePolicy)
        self.buy.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.buy.setMaximum(5000.99)
        self.buy.setObjectName("buy")
        self.gridLayout_12.addWidget(self.buy, 0, 0, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.add_item)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_4.sizePolicy().hasHeightForWidth())
        self.label_4.setSizePolicy(sizePolicy)
        self.label_4.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.label_4.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.label_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.label_4.setLineWidth(13)
        self.label_4.setMidLineWidth(0)
        self.label_4.setTextFormat(QtCore.Qt.AutoText)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setIndent(0)
        self.label_4.setObjectName("label_4")
        self.gridLayout_12.addWidget(self.label_4, 0, 1, 1, 1)
        self.gridLayout_6.addLayout(self.gridLayout_12, 5, 0, 1, 1)
        self.gridLayout_22 = QtWidgets.QGridLayout()
        self.gridLayout_22.setObjectName("gridLayout_22")
        self.halfbuy = QtWidgets.QDoubleSpinBox(self.add_item)
        self.halfbuy.clear()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(4)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.halfbuy.sizePolicy().hasHeightForWidth())
        self.halfbuy.setSizePolicy(sizePolicy)
        self.halfbuy.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.halfbuy.setMaximum(5000.99)
        self.halfbuy.setObjectName("halfbuy")
        self.gridLayout_22.addWidget(self.halfbuy, 0, 0, 1, 1)
        self.label_10 = QtWidgets.QLabel(self.add_item)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_10.sizePolicy().hasHeightForWidth())
        self.label_10.setSizePolicy(sizePolicy)
        self.label_10.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.label_10.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.label_10.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.label_10.setLineWidth(13)
        self.label_10.setAlignment(QtCore.Qt.AlignCenter)
        self.label_10.setIndent(0)
        self.label_10.setObjectName("label_10")
        self.gridLayout_22.addWidget(self.label_10, 0, 1, 1, 1)
        self.gridLayout_6.addLayout(self.gridLayout_22, 4, 0, 1, 1)
        self.gridLayout_3.addLayout(self.gridLayout_6, 1, 0, 1, 1)
        spacerItem7 = QtWidgets.QSpacerItem(20, 2, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_3.addItem(spacerItem7, 2, 0, 1, 1)
        spacerItem8 = QtWidgets.QSpacerItem(20, 3, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_3.addItem(spacerItem8, 0, 0, 1, 1)
        if (self.userType):
            self.tabWidget.addTab(self.add_item, "")
        self.searchitem = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.searchitem.sizePolicy().hasHeightForWidth())
        self.searchitem.setSizePolicy(sizePolicy)
        self.searchitem.setObjectName("searchitem")
        self.gridLayout_18 = QtWidgets.QGridLayout(self.searchitem)
        self.gridLayout_18.setObjectName("gridLayout_18")
        self.gridLayout_14 = QtWidgets.QGridLayout()
        self.gridLayout_14.setContentsMargins(5, 5, 5, 5)
        self.gridLayout_14.setHorizontalSpacing(6)
        self.gridLayout_14.setVerticalSpacing(20)
        self.gridLayout_14.setObjectName("gridLayout_14")
        if self.userType:
            self.searchTable = tableController.Search(
                ["الكود", "الاسم", "النوع", "العدد", "سعر الجمله", "سعر النص جمله", "سعر البيع", "المكسب",
                 "Icons/edit.png", "Icons/delete.png", 2])
        else:
            self.searchTable = tableController.Search(["الكود", "الاسم", "النوع", "العدد", "سعر البيع", 0])
        self.gridLayout_16 = QtWidgets.QGridLayout()
        self.gridLayout_16.setObjectName("gridLayout_16")
        self.itemName_3 = QtWidgets.QLineEdit(self.searchitem)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(4)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.itemName_3.sizePolicy().hasHeightForWidth())
        self.itemName_3.setSizePolicy(sizePolicy)
        self.itemName_3.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.itemName_3.setObjectName("itemName_3")
        self.gridLayout_16.addWidget(self.itemName_3, 0, 1, 1, 1)
        self.search = QtWidgets.QPushButton(self.searchitem)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.search.sizePolicy().hasHeightForWidth())
        self.search.setSizePolicy(sizePolicy)
        self.search.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.search.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.search.setObjectName("search")
        self.gridLayout_16.addWidget(self.search, 0, 0, 1, 1)
        self.label_8 = QtWidgets.QLabel(self.searchitem)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_8.sizePolicy().hasHeightForWidth())
        self.label_8.setSizePolicy(sizePolicy)
        self.label_8.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.label_8.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.label_8.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.label_8.setLineWidth(13)
        self.label_8.setMidLineWidth(0)
        self.label_8.setTextFormat(QtCore.Qt.AutoText)
        self.label_8.setAlignment(QtCore.Qt.AlignCenter)
        self.label_8.setIndent(0)
        self.label_8.setObjectName("label_8")
        self.gridLayout_16.addWidget(self.label_8, 0, 2, 1, 1)
        self.gridLayout_14.addLayout(self.gridLayout_16, 0, 0, 1, 1)
        self.gridLayout_15 = QtWidgets.QGridLayout()
        self.gridLayout_15.setContentsMargins(-1, -1, 6, -1)
        self.gridLayout_15.setObjectName("gridLayout_15")
        self.searchfor = QtWidgets.QComboBox(self.searchitem)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(3)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.searchfor.sizePolicy().hasHeightForWidth())
        self.searchfor.setSizePolicy(sizePolicy)
        self.searchfor.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.searchfor.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.searchfor.setObjectName("searchfor")
        self.gridLayout_15.addWidget(self.searchfor, 1, 0, 1, 1)
        self.label_9 = QtWidgets.QLabel(self.searchitem)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_9.sizePolicy().hasHeightForWidth())
        self.label_9.setSizePolicy(sizePolicy)
        self.label_9.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.label_9.setObjectName("label_9")
        self.gridLayout_15.addWidget(self.label_9, 1, 1, 1, 1)
        self.gridLayout_14.addLayout(self.gridLayout_15, 2, 0, 1, 1)
        self.gridLayout_18.addLayout(self.gridLayout_14, 0, 0, 1, 1)
        self.gridLayout_21 = QtWidgets.QGridLayout()
        self.gridLayout_21.setObjectName("gridLayout_21")
        self.gridLayout_14.addWidget(self.searchTable)
        spacerItem9 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_21.addItem(spacerItem9, 0, 2, 1, 1)
        spacerItem10 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_21.addItem(spacerItem10, 0, 0, 1, 1)
        spacerItem11 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_21.addItem(spacerItem11, 0, 4, 1, 1)
        self.gridLayout_18.addLayout(self.gridLayout_21, 1, 0, 1, 1)
        self.tabWidget.addTab(self.searchitem, "")
        self.gridLayout_4.addWidget(self.signOut, 1, 0, 1, 1)
        self.gridLayout_4.addWidget(self.tabWidget, 0, 0, 1, 1)
        self.setCentralWidget(self.centralwidget)
        self.retranslateUi()
        self.tabWidget.setCurrentIndex(0)
        self.sellingTab = QtWidgets.QWidget()
        self.gridLayout_23 = QtWidgets.QGridLayout(self.sellingTab)
        self.gridLayout_24 = QtWidgets.QGridLayout()
        self.gridLayout_24.setObjectName("gridLayout_24")
        self.thisYear = QtWidgets.QRadioButton()
        self.thisYear.setText("السنه")
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.thisYear.sizePolicy().hasHeightForWidth())
        self.thisYear.setSizePolicy(sizePolicy)
        self.thisYear.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.thisYear.setCursor(QtGui.QCursor(QtCore.Qt.OpenHandCursor))
        self.thisYear.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.thisYear.setObjectName("thisYear")
        if self.userType:
            self.gridLayout_24.addWidget(self.thisYear, 0, 0, 1, 1)
        self.thisMonth = QtWidgets.QRadioButton()
        self.thisMonth.setText("الشهر")
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.thisMonth.sizePolicy().hasHeightForWidth())
        self.thisMonth.setSizePolicy(sizePolicy)
        self.thisMonth.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.thisMonth.setCursor(QtGui.QCursor(QtCore.Qt.OpenHandCursor))
        self.thisMonth.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.thisMonth.setObjectName("thisMonth")
        if self.userType:
            self.gridLayout_24.addWidget(self.thisMonth, 0, 1, 1, 1)
        self.thisDay = QtWidgets.QRadioButton()
        self.thisDay.setText("اليوم")
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.thisDay.sizePolicy().hasHeightForWidth())
        self.thisDay.setSizePolicy(sizePolicy)
        self.thisDay.setMinimumSize(QtCore.QSize(0, 0))
        self.thisDay.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.thisDay.setCursor(QtGui.QCursor(QtCore.Qt.OpenHandCursor))
        self.thisDay.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.thisDay.setObjectName("thisDay")
        if self.userType:
            self.gridLayout_24.addWidget(self.thisDay, 0, 2, 1, 1)
        self.gridLayout_23.addLayout(self.gridLayout_24, 0, 0, 1, 1)
        self.gridLayout_26 = QtWidgets.QGridLayout()
        self.gridLayout_26.setObjectName("gridLayout_26")
        self.searchbyDate = QtWidgets.QPushButton()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.searchbyDate.sizePolicy().hasHeightForWidth())
        self.searchbyDate.setSizePolicy(sizePolicy)
        self.searchbyDate.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.searchbyDate.setCursor(QtGui.QCursor(QtCore.Qt.OpenHandCursor))
        self.searchbyDate.setObjectName("searchbyDate")
        self.gridLayout_26.addWidget(self.searchbyDate, 0, 0, 1, 1)
        self.label_11 = QtWidgets.QLabel()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_11.sizePolicy().hasHeightForWidth())
        self.label_11.setSizePolicy(sizePolicy)
        self.label_11.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.label_11.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.label_11.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.label_11.setLineWidth(13)
        self.label_11.setMidLineWidth(0)
        self.label_11.setTextFormat(QtCore.Qt.AutoText)
        self.label_11.setAlignment(QtCore.Qt.AlignCenter)
        self.label_11.setIndent(0)
        self.label_11.setObjectName("label_11")
        self.searchbyDate.setText("بحث")
        self.label_11.setText("البحث بالتاريخ")
        self.gridLayout_26.addWidget(self.label_11, 0, 2, 1, 1)
        self.dateEdit = QtWidgets.QDateEdit()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(3)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dateEdit.sizePolicy().hasHeightForWidth())
        self.dateEdit.setSizePolicy(sizePolicy)
        self.dateEdit.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.dateEdit.setCursor(QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.dateEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.dateEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.dateEdit.setObjectName("dateEdit")
        self.dateEdit.setDisplayFormat("dd/MM/yyyy")
        self.dateEdit.setMaximumDate(QtCore.QDate(datetime.datetime.now().year, 12, 31))
        self.dateEdit.setMinimumDate(QtCore.QDate(2000, 1, 1))
        self.dateEdit.setDate(datetime.datetime.now())
        self.gridLayout_26.addWidget(self.dateEdit, 0, 1, 1, 1)
        if self.userType:
            self.gridLayout_23.addLayout(self.gridLayout_26, 1, 0, 1, 1)
        self.gridLayout_25 = QtWidgets.QGridLayout()
        self.gridLayout_25.setObjectName("gridLayout_25")
        if self.userType:
            self.soldTable = tableController.TableWidget(
                ["الكود", "الاسم", "النوع", "العدد", "سعر الجمله", "سعر البيع", "المكسب", "التاريخ", 0])
        else:
            self.soldTable = tableController.TableWidget(
                ["الكود", "الاسم", "النوع", "العدد", "سعر البيع", 0])
        self.gridLayout_25.addWidget(self.soldTable)
        self.gridLayout_23.addLayout(self.gridLayout_25, 2, 0, 1, 1)
        self.tabWidget.addTab(self.sellingTab, "المبيعات")
        self.fessTab = QtWidgets.QWidget()
        self.gridLayout_27 = QtWidgets.QGridLayout(self.fessTab)
        self.gridLayout_29 = QtWidgets.QGridLayout()
        self.gridLayout_29.setObjectName("gridLayout_29")
        self.feePrice = QtWidgets.QDoubleSpinBox()
        self.feePrice.clear()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(3)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.feePrice.sizePolicy().hasHeightForWidth())
        self.feePrice.setSizePolicy(sizePolicy)
        self.feePrice.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.feePrice.setDecimals(2)
        self.feePrice.setMaximum(5000.99)
        self.feePrice.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.feePrice.setProperty("value", 0.0)
        self.feePrice.setObjectName("feePrice")
        self.gridLayout_29.addWidget(self.feePrice, 0, 1, 1, 1)
        self.label_13 = QtWidgets.QLabel()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_13.sizePolicy().hasHeightForWidth())
        self.label_13.setSizePolicy(sizePolicy)
        self.label_13.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.label_13.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.label_13.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.label_13.setLineWidth(13)
        self.label_13.setMidLineWidth(0)
        self.label_13.setTextFormat(QtCore.Qt.AutoText)
        self.label_13.setAlignment(QtCore.Qt.AlignCenter)
        self.label_13.setIndent(0)
        self.label_13.setObjectName("label_13")
        self.label_13.setText("السعر")
        self.gridLayout_29.addWidget(self.label_13, 0, 2, 1, 1)
        self.addFees = QtWidgets.QPushButton()
        self.addFees.setText("اضافه")
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.addFees.sizePolicy().hasHeightForWidth())
        self.addFees.setSizePolicy(sizePolicy)
        self.addFees.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.addFees.setObjectName("addFees")
        self.feePrice.clear()
        self.gridLayout_29.addWidget(self.addFees, 0, 0, 1, 1)
        self.gridLayout_27.addLayout(self.gridLayout_29, 3, 0, 1, 1)
        self.gridLayout_30 = QtWidgets.QGridLayout()
        self.gridLayout_30.setContentsMargins(10, -1, 10, -1)
        self.gridLayout_30.setSpacing(7)
        self.gridLayout_30.setObjectName("gridLayout_30")
        self.shopFees = QtWidgets.QRadioButton()
        self.shopFees.setText("مصاريف محل")
        self.shopFees.setCursor(QtGui.QCursor(QtCore.Qt.OpenHandCursor))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.shopFees.sizePolicy().hasHeightForWidth())
        self.shopFees.setSizePolicy(sizePolicy)
        self.shopFees.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.shopFees.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.shopFees.setObjectName("shopFees")
        self.gridLayout_30.addWidget(self.shopFees, 0, 0, 1, 1)
        self.personalFees = QtWidgets.QRadioButton()
        self.personalFees.setText("مصاريف شخصية")
        self.personalFees.click()
        self.personalFees.setCursor(QtGui.QCursor(QtCore.Qt.OpenHandCursor))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.personalFees.sizePolicy().hasHeightForWidth())
        self.personalFees.setSizePolicy(sizePolicy)
        self.personalFees.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.personalFees.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.personalFees.setObjectName("personalFees")
        self.gridLayout_30.addWidget(self.personalFees, 0, 1, 1, 1)
        self.gridLayout_27.addLayout(self.gridLayout_30, 2, 0, 1, 1)
        self.gridLayout_28 = QtWidgets.QGridLayout()
        self.gridLayout_28.setObjectName("gridLayout_28")
        self.feeName = QtWidgets.QLineEdit()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(4)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.feeName.sizePolicy().hasHeightForWidth())
        self.feeName.setSizePolicy(sizePolicy)
        self.feeName.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.feeName.setObjectName("feeName")
        self.gridLayout_28.addWidget(self.feeName, 0, 0, 1, 1)
        self.label_12 = QtWidgets.QLabel()
        self.label_12.setText("الاسم")
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_12.sizePolicy().hasHeightForWidth())
        self.label_12.setSizePolicy(sizePolicy)
        self.label_12.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.label_12.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.label_12.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.label_12.setLineWidth(13)
        self.label_12.setMidLineWidth(0)
        self.label_12.setTextFormat(QtCore.Qt.AutoText)
        self.label_12.setAlignment(QtCore.Qt.AlignCenter)
        self.label_12.setIndent(0)
        self.label_12.setObjectName("label_12")
        self.gridLayout_28.addWidget(self.label_12, 0, 1, 1, 1)
        self.gridLayout_27.addLayout(self.gridLayout_28, 1, 0, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_27.addItem(spacerItem, 0, 0, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_27.addItem(spacerItem1, 4, 0, 1, 1)
        self.tabWidget.addTab(self.fessTab, "المصاريف اليوميه")
        self.searchinStore = QtWidgets.QWidget()
        self.gridLayout_33 = QtWidgets.QGridLayout(self.searchinStore)
        self.gridLayout_36 = QtWidgets.QGridLayout()
        self.gridLayout_36.setObjectName("gridLayout_36")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_36.addItem(spacerItem, 0, 4, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_36.addItem(spacerItem1, 0, 2, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_36.addItem(spacerItem2, 0, 0, 1, 1)
        self.gridLayout_33.addLayout(self.gridLayout_36, 4, 0, 1, 1)
        self.gridLayout_35 = QtWidgets.QGridLayout()
        self.gridLayout_35.setContentsMargins(-1, -1, 6, -1)
        self.gridLayout_35.setObjectName("gridLayout_35")
        self.searchfor_4 = QtWidgets.QComboBox()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(3)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.searchfor_4.sizePolicy().hasHeightForWidth())
        self.searchfor_4.setSizePolicy(sizePolicy)
        self.searchfor_4.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.searchfor_4.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.searchfor_4.setObjectName("searchfor_4")
        self.gridLayout_35.addWidget(self.searchfor_4, 1, 0, 1, 1)
        self.label_15 = QtWidgets.QLabel()
        self.label_15.setText("البحث عن")
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_15.sizePolicy().hasHeightForWidth())
        self.label_15.setSizePolicy(sizePolicy)
        self.label_15.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.label_15.setObjectName("label_15")
        self.gridLayout_35.addWidget(self.label_15, 1, 1, 1, 1)
        self.gridLayout_33.addLayout(self.gridLayout_35, 1, 0, 1, 1)
        self.gridLayout_34 = QtWidgets.QGridLayout()
        self.gridLayout_34.setObjectName("gridLayout_34")
        self.searchStore = QtWidgets.QPushButton()
        self.searchStore.setText("بحث")
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.searchStore.sizePolicy().hasHeightForWidth())
        self.searchStore.setSizePolicy(sizePolicy)
        self.searchStore.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.searchStore.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.searchStore.setObjectName("searchStore")
        self.gridLayout_34.addWidget(self.searchStore, 0, 0, 1, 1)
        self.label_14 = QtWidgets.QLabel()
        self.label_14.setText("اسم المنتج")
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_14.sizePolicy().hasHeightForWidth())
        self.label_14.setSizePolicy(sizePolicy)
        self.label_14.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.label_14.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.label_14.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.label_14.setLineWidth(13)
        self.label_14.setMidLineWidth(0)
        self.label_14.setTextFormat(QtCore.Qt.AutoText)
        self.label_14.setAlignment(QtCore.Qt.AlignCenter)
        self.label_14.setIndent(0)
        self.label_14.setObjectName("label_14")
        self.gridLayout_34.addWidget(self.label_14, 0, 2, 1, 1)
        self.storeName = QtWidgets.QLineEdit()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(4)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.storeName.sizePolicy().hasHeightForWidth())
        self.storeName.setSizePolicy(sizePolicy)
        self.storeName.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.storeName.setObjectName("storeName")
        self.gridLayout_34.addWidget(self.storeName, 0, 1, 1, 1)
        self.gridLayout_33.addLayout(self.gridLayout_34, 0, 0, 1, 1)
        self.gridLayout_37 = QtWidgets.QGridLayout()
        self.gridLayout_37.setObjectName("gridLayout_37")
        self.label_16 = QtWidgets.QLabel()
        self.label_16.setText("الكميه او العدد")
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_16.sizePolicy().hasHeightForWidth())
        self.label_16.setSizePolicy(sizePolicy)
        self.label_16.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.label_16.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.label_16.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.label_16.setLineWidth(13)
        self.label_16.setMidLineWidth(0)
        self.label_16.setTextFormat(QtCore.Qt.AutoText)
        self.label_16.setAlignment(QtCore.Qt.AlignCenter)
        self.label_16.setIndent(0)
        self.label_16.setObjectName("label_16")
        self.gridLayout_37.addWidget(self.label_16, 0, 3, 1, 1)
        self.numMove = QtWidgets.QDoubleSpinBox()
        self.numMove.clear()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(4)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.numMove.sizePolicy().hasHeightForWidth())
        self.numMove.setSizePolicy(sizePolicy)
        self.numMove.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.numMove.setDecimals(2)
        self.numMove.setMaximum(1600.99)
        self.numMove.setSingleStep(0.5)
        self.numMove.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.numMove.setProperty("value", 0.0)
        self.numMove.setObjectName("numMove")
        self.gridLayout_37.addWidget(self.numMove, 0, 1, 1, 1)
        self.moveToShop = QtWidgets.QPushButton()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.moveToShop.sizePolicy().hasHeightForWidth())
        self.moveToShop.setSizePolicy(sizePolicy)
        self.moveToShop.setMaximumSize(QtCore.QSize(16777215, maxV))
        self.moveToShop.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.moveToShop.setObjectName("moveToShop")
        self.moveToShop.setText("نقل")
        self.gridLayout_37.addWidget(self.moveToShop, 0, 0, 1, 1)
        self.gridLayout_33.addLayout(self.gridLayout_37, 3, 0, 1, 1)
        self.storeTable = tableController.TableWidget(
            ["الكود", "الاسم", "النوع", "العدد", "سعر الجمله", "سعر النص جمله", "سعر البيع", "المكسب", "تعديل", "حذف",
             "نقل", 3])
        self.gridLayout_33.addWidget(self.storeTable, 2, 0, 1, 1)
        if (self.userType):
            self.tabWidget.addTab(self.searchinStore, "المخزن")

        QtCore.QMetaObject.connectSlotsByName(self)

        ###########################
        #######Activations#########
        ###########################
        self.itemType.addItem("رمل")
        self.itemType.addItem("دراي فود")
        self.itemType.addItem("ويت فود")
        self.itemType.addItem("اكسيسوارات")
        self.itemType.addItem("ادويه")
        self.itemType.addItem("مستلزمات عصافير")
        self.itemType.addItem("مستلزمات اسماك")
        self.itemType.addItem("بوكسات")
        self.itemType.addItem("سراير و عماويد خربشه")
        self.itemType.addItem("ارواح")
        self.itemType.addItem("العاب")
        self.itemType.addItem("فرش و امشاط")
        self.itemType.addItem("احزمه و صدارات")

        self.searchfor.addItem("رمل")
        self.searchfor.addItem("دراي فود")
        self.searchfor.addItem("ويت فود")
        self.searchfor.addItem("اكسيسوارات")
        self.searchfor.addItem("ادويه")
        self.searchfor.addItem("مستلزمات عصافير")
        self.searchfor.addItem("مستلزمات اسماك")
        self.searchfor.addItem("بوكسات")
        self.searchfor.addItem("سراير و عماويد خربشه")
        self.searchfor.addItem("ارواح")
        self.searchfor.addItem("العاب")
        self.searchfor.addItem("فرش و امشاط")
        self.searchfor.addItem("احزمه و صدارات")
        self.searchfor.addItem("الكل")
        self.searchfor.currentTextChanged.connect(lambda: self.search_cat(True))

        self.searchfor_4.addItem("رمل")
        self.searchfor_4.addItem("دراي فود")
        self.searchfor_4.addItem("ويت فود")
        self.searchfor_4.addItem("اكسيسوارات")
        self.searchfor_4.addItem("ادويه")
        self.searchfor_4.addItem("مستلزمات عصافير")
        self.searchfor_4.addItem("مستلزمات اسماك")
        self.searchfor_4.addItem("بوكسات")
        self.searchfor_4.addItem("سراير و عماويد خربشه")
        self.searchfor_4.addItem("ارواح")
        self.searchfor_4.addItem("العاب")
        self.searchfor_4.addItem("فرش و امشاط")
        self.searchfor_4.addItem("احزمه و صدارات")
        self.searchfor_4.addItem("الكل")
        self.searchfor_4.currentTextChanged.connect(lambda: self.search_cat(False))

        self.saveadding.clicked.connect(self.addItem)
        self.canceladding.clicked.connect(self.ClearAddData)
        self.search.clicked.connect(lambda: self.searchforitem(True))
        self.searchStore.clicked.connect(lambda: self.searchforitem(False))
        self.itemType.setCurrentIndex(-1)
        self.searchfor.setCurrentIndex(-1)
        self.searchfor_4.setCurrentIndex(-1)
        completer = list(db.execute("select name from 'shop'").fetchall())
        Names = []
        for Name in completer:
            Names.append(Name[0])
        self.itemName_3.setCompleter(QCompleter(Names))
        self.itemName_2.setCompleter(QCompleter(Names))
        self.itemName.setCompleter(QCompleter(Names))

        completer = list(db.execute("select name from 'store'").fetchall())
        Names.clear()
        for Name in completer:
            Names.append(Name[0])
        self.storeName.setCompleter(QCompleter(Names))
        self.addsell.clicked.connect(self.sellItem)
        self.cancelsell.clicked.connect(self.clearSellTable)
        self.donesell.clicked.connect(self.doneSelling)
        self.donesell.hide()
        self.thisDay.clicked.connect(lambda: self.showforDay(datetime.date.today()))
        self.thisDay.click()
        self.thisMonth.clicked.connect(self.showforMonth)
        self.thisYear.clicked.connect(self.showforYear)
        self.searchbyDate.clicked.connect(self.showbyDate)
        self.addFees.clicked.connect(self.addFee)
        self.set_state(False)
        self.moveToShop.clicked.connect(self.storeToShop)

        ###########################
        #######End ofActivations#########
        ###########################
        self.setCentralWidget(self.centralwidget)
        self.retranslateUi()
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self):

        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("MainWindow", "برنامج مبيعات"))
        self.label_6.setText(_translate("MainWindow", "اسم المنتج"))
        self.addsell.setText(_translate("MainWindow", "اضافه"))
        self.label_7.setText(_translate("MainWindow", "الكميه او العدد"))
        self.donesell.setText(_translate("MainWindow", "اتمام البيع"))
        self.cancelsell.setText(_translate("MainWindow", "الغاء"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.sell_payment), _translate("MainWindow", "انشاء فاتوره"))
        self.label_3.setText(_translate("MainWindow", "الكميه او العدد"))
        self.label.setText(_translate("MainWindow", "اسم المنتج"))
        self.canceladding.setText(_translate("MainWindow", "حذف"))
        self.saveadding.setText(_translate("MainWindow", "حفظ"))
        self.label_5.setText(_translate("MainWindow", "سعر البيع"))
        self.label_2.setText(_translate("MainWindow", "النوع"))
        self.label_4.setText(_translate("MainWindow", "سعر الجمله "))
        self.label_10.setText(_translate("MainWindow", "سعر النص جمله"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.add_item), _translate("MainWindow", "اضافه منتج"))
        self.search.setText(_translate("MainWindow", "بحث"))
        self.label_8.setText(_translate("MainWindow", "اسم المنتج"))
        self.label_9.setText(_translate("MainWindow", "البحث عن:"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.searchitem), _translate("MainWindow", "البحث عن منتج"))
        self.canEdit = False

    ###########################
    ########functions##########
    ###########################
    def loginPage(self):
        reply = QMessageBox.question(self, 'تسجيل الخروج', 'هل تريد تسجيل الخروج', QMessageBox.Yes | QMessageBox.No,
                                     QMessageBox.No)
        if reply == QMessageBox.Yes:
            self.window = login.login()
            self.window.show()
            self.hide()
        else:
            pass

    def addFee(self):
        self.label_12.setStyleSheet("color : black")
        self.label_13.setStyleSheet("color : black")
        name = self.feeName.text()
        price = self.feePrice.value()
        if (len(self.feeName.text()) >= 3 and self.feePrice.value() > 0):
            if self.shopFees.isChecked():
                db.execute("insert into fees (name ,type, price, date ) values(?,?,?,?)",[name,"مصاريف محل",price,datetime.date.today()])
            elif self.personalFees.isChecked():
                db.execute("insert into fees (name ,type, price, date ) values(?,?,?,?)",[name,"مصاريف شخصيه",price,datetime.date.today()])
            self.feePrice.clear()
            self.feeName.setText("")
            self.thisDay.click()
        elif (len(self.feeName.text()) < 3):
            self.label_12.setStyleSheet("color : red")
            self.feeName.setText("")
        elif (self.feePrice.value() < 1):
            self.label_13.setStyleSheet("color : red")

    def storeToShop(self):
        pass
    #     num = self.numMove.value()
    #     self.numMove.clear()
    #     it = []
    #     try:
    #         items[it["name"]]["number"] += num
    #         itemsStore[it["name"]]["number"] -= num
    #         self.updateDataFile(False)
    #         self.storeName.setText(it["name"])
    #         self.searchforitem(False)
    #         self.updateDataFile(True)
    #     except KeyError:
    #         mbox = QMessageBox(QMessageBox.Question, "اضافه منتج",
    #                            "هذا المنتج غير متوفر في المحل. هل ترغب في اضافه هذا المنتج؟")
    #         mbox.setDefaultButton(QMessageBox.Cancel)
    #         mbox.setIcon(QMessageBox.Warning)
    #         mbox.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
    #         retval = mbox.exec_()
    #         if retval == QMessageBox.Ok:
    #             itemsStore[it["name"]]["number"] -= num
    #             self.updateDataFile(False)
    #             self.storeName.setText(it["name"])
    #             self.searchforitem(False)
    #             items[it["name"]] = {
    #                 "name": it["name"],
    #                 "type": it["type"],
    #                 "number": num,
    #                 "sellPrice": it["sellPrice"],
    #                 "buyPrice": it["buyPrice"],
    #                 "halfprice": it["halfprice"]
    #             }

    def showbyDate(self):
        day = self.dateEdit.date().day()
        month = self.dateEdit.date().month()
        year = self.dateEdit.date().year()
        self.soldTable.clearTable()
        if day < 10:
            day = '0' + str(day)
        if month < 10:
            month = '0' + str(month)
        date = str(year) + "-" + str(month) + "-" + str(day)
        self.showforDay(date)

    def showforDay(self, date):
        totalSold = 0
        totalBuy = 0
        totalFees = 0
        self.soldTable.clearTable()
        mydate = "%" + str(date) + "%"
        if self.userType:
            mylist = db.execute(
                "select shop.ID ,sales.NAME ,shop.type, sales.number, shop.buy_price*sales.number, SELL_PRICE*sales.number,SOLD_DATE from sales left join shop on sales.NAME = shop.NAME  where sales.sold_date like ?",
                [mydate])
            mylist = list(mylist.fetchall())
            try:
                for x in mylist:
                    x = list(x)
                    x.insert(-1, x[-2] - x[-3])
                    self.soldTable.insertItem(x)
                    totalBuy += (x[4])
                    totalSold += (x[5])
                self.soldTable.insertItem(
                    ["الاجمالي", "", "", "", totalBuy, totalSold, totalSold - totalBuy, ""])
            except:
                pass
            mylist = db.execute("select * from fees where date like ?", [mydate])
            try:
                for x in mylist:
                    x = list(x)
                    self.soldTable.insertItem(["", x[0], x[1], "", "", "", x[2], x[3]])
                    totalFees += x[2]
                self.soldTable.insertItem(["صافي الريح", "", "", "", "", "", totalSold - totalBuy- totalFees, ""])

            except:pass
        else:
            mylist = db.execute(
                "select shop.ID ,sales.NAME ,shop.type, sales.number, SELL_PRICE*sales.number from sales left join shop on sales.NAME = shop.NAME  where sales.sold_date like ?",
                [mydate])
            mylist = list(mylist.fetchall())
            try:
                for x in mylist:
                    x = list(x)
                    self.soldTable.insertItem(x)
                    totalSold += (x[4])
                self.soldTable.insertItem(["الاجمالي", "", "", "", totalSold])
                mylist = db.execute("select * from fees where date like ?", [mydate])
                for x in mylist:
                    x = list(x)
                    self.soldTable.insertItem(["", x[0], x[1],"", x[2]])
                    totalFees += x[2]
                self.soldTable.insertItem(["صافي الريح", "", "","", totalSold - totalFees])
            except:
                pass

        #         else:
        #             self.soldTable.insertItem(
        #                 [x["name"], x["type"], "", str(x["price"]), str(x["year"]), str(x["month"]), str(x["day"])])
        #         totalFees += x["price"]
        # if self.userType:
        #     self.soldTable.insertItem(
        #         ["صافي الربح", "", "", "", "", str(round(totalSold - totalBuy - totalFees, 3)), "", "", ""])
        # else:
        #     self.soldTable.insertItem(["صافي الربح", "", "", str(round(totalSold - totalFees, 3)), "", "", ""])

    def showforMonth(self):
        self.soldTable.clearTable()
        month = self.dateEdit.date().month()
        year = self.dateEdit.date().year()
        self.soldTable.clearTable()
        if month < 10:
            month = '0' + str(month)
        date = str(year) + "-" + str(month)
        self.showforDay(date)

    def showforYear(self):
        self.soldTable.clearTable()
        year = self.dateEdit.date().year()
        self.soldTable.clearTable()
        date = str(year)
        self.showforDay(date)

    def searchforitem(self, shop):
        if (shop):
            name = self.itemName_3.text()
            self.searchTable.clearTable()
            self.label_8.setStyleSheet("color: black")
            self.searchfor.setCurrentIndex(-1)
            self.itemName_3.clear()
        elif (not shop):
            self.set_state(False)
            name = self.storeName.text()
            self.storeTable.clearTable()
            self.label_14.setStyleSheet("color: black")
            self.searchfor_4.setCurrentIndex(-1)
            self.storeName.clear()
        try:
            if (shop):
                value = db.execute("SELECT * from 'shop' where NAME = ?", [name])
                value = list(value.fetchone())
                if self.userType:
                    value.append(value[3] * (value[6] - value[4]))
                else:
                    value.pop(4)
                    value.pop(5)
                self.searchTable.insertItem(value)
            elif (not shop):
                value = db.execute(
                    "select shop.ID,store.NAME,store.type,store.count,shop.buy_price,shop.half_price,shop.sell_price from store left join shop on shop.Name = store.NAME where store.NAME = ?",
                    [name])
                value = list(value.fetchone())
                if self.userType:
                    value.append(value[3] * (value[6] - value[4]))
                else:
                    value.pop(4)
                    value.pop(5)
                self.storeTable.insertItem(value)
            if self.userType:
                inSearch = ["", "", "", "", "", "", "", ""]
                if (shop):
                    self.searchTable.insertItem(inSearch)
                elif (not shop):
                    self.storeTable.insertItem(inSearch)
        except(TypeError):
            if (shop):
                self.label_8.setStyleSheet("color: red")
            elif (not shop):
                self.label_14.setStyleSheet("color: red")

    def search_cat(self, shop):
        if (shop):
            searchtype = str(self.searchfor.currentText())
            self.searchTable.clearTable()
            self.label_8.setStyleSheet("color: black")
            self.itemName_3.clear()
        elif (not shop):
            searchtype = str(self.searchfor_4.currentText())
            self.storeTable.clearTable()
            self.label_14.setStyleSheet("color: black")
            self.storeName.clear()
        if len(searchtype) > 0:
            totalBuy = 0
            totalSell = 0
            if (shop and searchtype == "الكل"):
                values = db.execute("SELECT * from 'shop'")
                values = list(values.fetchall())
                for value in values:
                    value = list(value)
                    if self.userType:
                        value.append(round(value[3] * (value[6] - value[4])))
                        totalBuy += (value[3] * value[4])
                        totalSell += (value[3] * value[6])
                    else:
                        value.pop(4)
                        value.pop(5)
                    self.searchTable.insertItem(value)
            elif (shop and not searchtype == "الكل"):
                values = db.execute("SELECT * from 'shop' where TYPE = ?", [searchtype])
                values = list(values.fetchall())
                for value in values:
                    value = list(value)
                    if self.userType:
                        value.append(round(value[3] * (value[6] - value[4])))
                        totalBuy += (value[3] * value[4])
                        totalSell += (value[3] * value[6])
                    else:
                        value.pop(4)
                        value.pop(5)
                    self.searchTable.insertItem(value)
            elif (not shop and searchtype == "الكل"):
                values = db.execute(
                    "select shop.ID,store.NAME,store.type,store.count,shop.buy_price,shop.half_price,shop.sell_price from store left join shop on shop.Name = store.NAME;")
                values = list(values.fetchall())
                for value in values:
                    value = list(value)
                    try:
                        value.append(value[3] * (value[6] - value[4]))
                        self.storeTable.insertItem(value)
                        totalBuy += (value[3] * value[4])
                        totalSell += (value[3] * value[6])
                    except(TypeError):
                        value.append('')
                        self.storeTable.insertItem(value)
            elif (not shop and not searchtype == "الكل"):
                values = db.execute(
                    "select shop.ID,store.NAME,store.type,store.count,shop.buy_price,shop.half_price,shop.sell_price from store left join shop on shop.Name = store.NAME where store.TYPE = ?;",
                    [searchtype])
                values = list(values.fetchall())
                for value in values:
                    value = list(value)
                    try:
                        value.append(value[3] * (value[6] - value[4]))
                        self.storeTable.insertItem(value)
                        totalBuy += (value[3] * value[4])
                        totalSell += (value[3] * value[6])
                    except(TypeError):
                        value.append('')
                        self.storeTable.insertItem(value)
            if self.userType:
                inSearch = ["الاجمالي", "", "", "", totalBuy, "", totalSell, totalSell - totalBuy]
                if (shop):
                    self.searchTable.insertItem(inSearch)
                elif (not shop):
                    self.storeTable.insertItem(inSearch)

    def addItem(self):
        name = self.itemName.text().strip()
        itemtype = str(self.itemType.currentText())
        num = self.number.value()
        sellPrice = self.sell.value()
        buyPrice = self.buy.value()
        halfbuy = self.halfbuy.value()

        if len(name) > 2 and len(itemtype) > 2 \
                and sellPrice > 0 and buyPrice > 0 and sellPrice > buyPrice \
                and halfbuy > 0 and sellPrice >= halfbuy and halfbuy >= buyPrice:
            if (self.inShop.isChecked()):
                try:
                    db.execute(
                        "INSERT INTO 'shop' (NAME,TYPE,COUNT,HALF_PRICE,SELL_PRICE,BUY_PRICE)values(?,?,?,?,?,?)",
                        (name, itemtype, num, halfbuy, sellPrice, buyPrice))
                    self.ClearAddData()
                except(sqlite3.IntegrityError):
                    self.label.setStyleSheet("color: red")
                    self.itemName.setText(name + " هذا المنتج موجود بالفعل")
            elif (self.inStore.isChecked()):
                try:
                    db.execute("INSERT INTO 'store' (NAME ,COUNT ,TYPE ) values (?,?,?)", (name, num, itemtype))
                    try:
                        db.execute(
                            "INSERT INTO 'shop' (NAME,TYPE,COUNT,HALF_PRICE,SELL_PRICE,BUY_PRICE)values(?,?,?,?,?,?)",
                            (name, itemtype, num, halfbuy, sellPrice, buyPrice))
                    except:
                        pass
                    self.ClearAddData()
                except(sqlite3.IntegrityError):
                    self.label.setStyleSheet("color: red")
                    self.itemName.setText(name + " هذا المنتج موجود بالفعل")
        elif len(name) <= 2:
            self.label.setStyleSheet("color: red")
        elif len(itemtype) <= 2:
            self.label_2.setStyleSheet("color: red")
        elif sellPrice == 0 or buyPrice == 0 or halfbuy == 0 or sellPrice < buyPrice or sellPrice < halfbuy or halfbuy < buyPrice:
            self.label_5.setStyleSheet("color: red")
            self.label_4.setStyleSheet("color: red")
            self.label_10.setStyleSheet("color: red")
        else:
            self.label.setStyleSheet("color: red")

    def ClearAddData(self):
        self.itemName.clear()
        self.label.setStyleSheet("color: black")
        self.itemType.setCurrentIndex(-1)
        self.number.clear()
        self.sell.clear()
        self.buy.clear()
        self.halfbuy.clear()
        self.label_4.setStyleSheet("color: black")
        self.label_5.setStyleSheet("color: black")
        self.label_2.setStyleSheet("color: black")
        self.label_10.setStyleSheet("color: black")

    def sellItem(self):
        name = self.itemName_2.text()
        number = self.number_2.value()
        place = None
        self.clearSellTab()
        if number <= 0:
            number = 1
        if len(name) > 0 and name not in MainWindow.TD.inList():
            try:
                if (self.fromShop.isChecked() and self.qtaay.isChecked()):
                    it = db.execute("select count,id,name,type,sell_price from 'shop' where name = ?", [name])
                    it = list(it.fetchone())
                    place = True
                elif (self.fromShop.isChecked() and self.gomla.isChecked()):
                    it = db.execute("select count,id,name,type,half_price from 'shop' where name = ?", [name])
                    it = list(it.fetchone())
                    place = True
                elif (self.fromStore.isChecked() and self.qtaay.isChecked()):
                    it = db.execute(
                        "select store.count,shop.ID,store.NAME,store.type,shop.sell_price from store left join shop on shop.Name = store.NAME where store.NAME = ?",
                        [name])
                    it = list(it.fetchone())
                    place = False
                elif (self.fromStore.isChecked() and self.gomla.isChecked()):
                    it = db.execute(
                        "select store.count,shop.ID,store.NAME,store.type,shop.half_price from store left join shop on shop.Name = store.NAME where store.NAME = ?",
                        [name])
                    it = list(it.fetchone())
                    place = False
                #     it[0] -> count in store table
                if (it[0] <= 0):
                    self.label_6.setStyleSheet("color: red")
                    self.itemName_2.setText((name + " غير متوفر"))
                elif (it[0] >= number):
                    it.insert(4, number)
                    # it[5] -> the price
                    it.append(number * it[5])
                    if place:
                        it.append("المحل")
                    else:
                        it.append("المخزن")
                    self.sellTable.removeItemRow()
                    MainWindow.TD.addData(it)
                    self.sellTable.insertItem(it[1:])
                    self.controlleSellPrice()
                    self.donesell.show()

                else:
                    self.label_6.setStyleSheet("color: red")
                    self.itemName_2.setText((name + " متوفر فقط " + str(it[0])))
            except(TypeError):
                print(Exception)
                self.label_6.setStyleSheet("color: red")
                self.itemName_2.setText((name + " غير متوفر "))
        elif len(name) <= 0:
            self.label_6.setStyleSheet("color: red")
        elif name in MainWindow.TD.inList():
            self.label_6.setStyleSheet("color: red")
            self.itemName_2.setText((name + " تمت اضافته للمشتريات "))

    def controlleSellPrice(self):
        totalProducts = 0
        totalPrice = 0
        for product in MainWindow.TD.getData():
            totalProducts += product["sellCount"]
            totalPrice += product["profit"]
        self.sellTable.insertItem(["الاجمالي", "", "", totalProducts, "", totalPrice, ""])

    def clearSellTab(self):
        self.itemName_2.setText("")
        self.label_6.setStyleSheet("color: black")
        self.number_2.setValue(0)
        self.label_7.setStyleSheet("color: black")

    def clearSellTable(self):
        self.sellTable.clearTable()
        self.clearSellTab()
        self.addsell.show()
        self.donesell.hide()

    def removeRow(self):
        self.sellTable.removeItemRow()
        if (self.sellTable.rowCount() == 0):
            self.clearSellTable()

    def doneSelling(self):
        sold = MainWindow.TD.getData()
        for it in sold:
            db.execute("INSERT INTO 'sales' (name ,number ,sold_date, from_where) values (?,?,?,?)",
                       [it["name"], it["sellCount"], datetime.date.today(), it["fromWhere"]])
            if it["fromWhere"] == "المحل":
                db.execute("update shop set count = ? where name = ?;", [it["allCount"] - it["sellCount"], it["name"]])
            elif it["fromWhere"] == "المخزن":
                db.execute("update store set count = ? where name = ?;", [it["allCount"] - it["sellCount"], it["name"]])
        self.donesell.hide()
        self.addsell.hide()
        MainWindow.TD.clearData()
        self.thisDay.click()

    def set_state(self, state):
        if (state):
            self.label_16.show()
            self.numMove.show()
            self.moveToShop.show()
        elif (not state):
            self.label_16.hide()
            self.numMove.hide()
            self.moveToShop.hide()
